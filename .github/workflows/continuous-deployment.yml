name: Memento API - Continuous Deployment
on:
    push:
        branches:
            - main
    workflow_run:
      workflows: ["Deploy to Production"]
      types:
        - completed

jobs:
    build:
        name: Build & Push Docker Image
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            
            - name: Set up Image tag
              id: image_version
              run: |
                echo "IMAGE_VERSION=v$(jq -r .version package.json)" >> $GITHUB_ENV

#            - name: Build, tag, and push image to Amazon ECR
#              env:
#                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#                  ECR_REPOSITORY: test-dani-repo
#                  IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
#              run: |
#                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_VERSION .
#                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_VERSION
        outputs:
          image_version: ${{ env.IMAGE_VERSION }}

    deploy_to_dev:
        name: Deploy to Dev
        runs-on: ubuntu-latest
        needs: build
        steps:   
            - name: Deploy to Dev
              env:
                  IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
              run: |
                #export VERSION=cat package.json | grep version  | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g'
                #echo $VERSION
                echo $IMAGE_VERSION
                echo "${{needs.build.outputs.image_version}}"
                #git clone git@github.com:Matech-Studios/matech-memento-k8s.git
                #cd matech-memento-k8s
                #git config --global 
                #git config --global 
                #cd v2/memento-api/staging 
                #cp -f values.yaml-DEFAULT values.yaml
                #sed -i "s/##VERSION##/$VERSION/g" values.yaml
                #git add *
                #git commit -m "version $VERSION"
                #git push

    deploy_to_prod:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: [ build, deploy_to_dev ]
        steps:
#            - name: Checkout
#              uses: actions/checkout@v3
#
#            - name: Set up Image tag
#              run: |
#                echo "IMAGE_VERSION=v$(jq -r .version package.json)" >> $GITHUB_ENV
      
            - name: Deploy to Production
              if: ${{ github.event.deploy_to_prod.event == 'deploy_to_prod' && github.event.deploy_to_prod.workflow == 'Deploy to Production' }}
              env:
                  IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
              run: |
                #export VERSION=`$(cat package.json | grep version  | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')`
                echo $IMAGE_VERSION
                #git clone git@github.com:Matech-Studios/matech-memento-k8s.git
                #cd matech-memento-k8s
                #git config --global 
                #git config --global 
                #cd v2/memento-api/production 
                #cp -f values.yaml-DEFAULT values.yaml
                #sed -i "s/##VERSION##/$VERSION/g" values.yaml
                #git add *
                #git commit -m "version $VERSION"
                #git push
